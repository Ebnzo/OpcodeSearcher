<Window x:Class="DamageMeter.UI.MainWindow"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:ui="clr-namespace:DamageMeter.UI"
                     xmlns:tera="clr-namespace:Tera;assembly=Tera.Core"
                     xmlns:messages="clr-namespace:Tera.Game.Messages;assembly=Tera.Core"
                     mc:Ignorable="d"
                     Title="Shinra Meter"
                     MinHeight="60" MinWidth="219"
                     Width="Auto"
        Background="#f5f5f5"
                    SizeToContent="Width"
                     Loaded="MainWindow_OnLoaded"
                     Closed="MainWindow_OnClosed" d:DataContext="{d:DesignInstance ui:MainWindow }">
    <Window.Resources>
        <Style TargetType="{x:Type ToolTip}">
            <Setter Property="Background" Value="#8F000000" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock TextWrapping="Wrap" Text="{Binding}" MaxWidth="600" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                    x:Name="Border"
                    Grid.ColumnSpan="2"
                    CornerRadius="2"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    BorderThickness="1" />
                <Border
                    Grid.Column="0"
                    CornerRadius="2,0,0,2"
                    Margin="1"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    BorderThickness="0,0,1,0" />
                <Path
                    x:Name="Arrow"
                    Grid.Column="1"
                    Fill="White"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 4 4 L 8 0 Z" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true" />
                <Trigger Property="ToggleButton.IsChecked" Value="true" />
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="Image" x:Key="ImageButton">
            <Setter Property="Opacity" Value=".7"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity"  Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>
        <Style x:Key="ShinraContext" TargetType="{x:Type ContextMenu}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border Background="Black" x:Name="Border"
                                BorderThickness="0.5">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="DarkGray" />
                            </Border.BorderBrush>
                            <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow"
                                     Value="true" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ui:DirectionToColor x:Key="DirectionToColor"></ui:DirectionToColor>
        <ui:BoolToVisibleHidden x:Key="BoolToVisibleHidden"></ui:BoolToVisibleHidden>
        <ui:OpcodeNameConv x:Key="OpcodeNameConv"></ui:OpcodeNameConv>
        <DataTemplate x:Key="opcdt" >
            <Grid Margin="0,-1,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Background="MediumSeaGreen" Width="50" Padding="5,0,5,0" HorizontalAlignment="Stretch" Grid.Column="0" Opacity=".9">
                    <TextBlock Text="{Binding Key}" Foreground="White" VerticalAlignment="Center" FontWeight="Normal" FontSize="11" Margin="0,1" HorizontalAlignment="Center" FontFamily="/ShinraMeter;component/#Droid Sans Mono"/>
                </Border>
                <Grid HorizontalAlignment="Stretch" Grid.Column="1">
                    
                <Border Background="MediumSeaGreen" Opacity=".5"  HorizontalAlignment="Stretch"/>
                    <TextBlock Text="{Binding Value}" Foreground="Black" Margin="5,0" VerticalAlignment="Center" FontSize="11" FontFamily="/ShinraMeter;component/#Droid Sans Mono"/>
                </Grid>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="msg" DataType="ui:PacketViewModel">
            <Grid MouseEnter="SelectPacketByDrag" MouseLeftButtonDown="SelectPacketByClick" Margin="0,0,0,-1"
                  Height="20">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="45"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Border Background="{Binding Message.Direction, Converter={StaticResource DirectionToColor}}" 
                        Grid.ColumnSpan="3" Opacity=".4"/>
                <Border  
                        Background="{Binding Message.Direction, Converter={StaticResource DirectionToColor}}" 
                        BorderBrush="{Binding Message.Direction, Converter={StaticResource DirectionToColor}}" 
                        Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibleHidden}}" 
                        Grid.ColumnSpan="3" x:Name="SelectionBorder" Opacity=".9"></Border>
                <TextBlock Text="{Binding Message.OpCode}" Foreground="Black" Margin="4,0" FontWeight="Normal"
                           FontFamily="/ShinraMeter;component/#Droid Sans Mono" VerticalAlignment="Center"/>
                <TextBlock Text="{Binding Message.OpCodeName, Converter={StaticResource OpcodeNameConv}}" 
                           Foreground="Black" Margin="4,0"  Grid.Column="1" VerticalAlignment="Center"
                           FontFamily="/ShinraMeter;component/#Droid Sans Mono"
                           />
                <TextBlock Text="{Binding Message.Payload.Count}" Foreground="Black" Grid.Column="2" 
                           HorizontalAlignment="Right" Margin="4,0" VerticalAlignment="Center"
                           FontFamily="/ShinraMeter;component/#Droid Sans Mono"/>
            </Grid>
        </DataTemplate>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="MinWidth" Value="120" />
            <Setter Property="MinHeight" Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton
                                Name="ToggleButton"
                                Template="{StaticResource ComboBoxToggleButton}"
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press" />
                            <ContentPresenter
                                Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="3,3,23,3"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                                     Style="{x:Null}"
                                     Template="{StaticResource ComboBoxTextBox}"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Center"
                                     Margin="3,3,23,3"
                                     Focusable="True"
                                     Background="Transparent"
                                     Visibility="Hidden"
                                     IsReadOnly="{TemplateBinding IsReadOnly}" />
                            <Popup
                                Name="Popup"

                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"

                                Focusable="False"
                                PopupAnimation="Slide">
                                <Grid
                                    Name="DropDown"
                                    SnapsToDevicePixels="True"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border
                                        x:Name="DropDownBorder"
                                        Background="Black"
                                        BorderThickness="1"
                                        BorderBrush="Transparent" />
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
                                                    KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- SimpleStyles: ComboBoxItem -->
        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Foreground" Value="White" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border
                            Name="Border"
                            Padding="2"
                            SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="Black" />
                                <Setter Property="BorderBrush" Value="White" />
                                <Setter Property="BorderThickness" Value="1" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="HexChunk">
            <Grid HorizontalAlignment="Left">
                <TextBlock FontFamily="/ShinraMeter;component/#Droid Sans Mono" Text="{Binding}" Margin="3,0" HorizontalAlignment="Left" 
                           TextWrapping="NoWrap" Height="Auto"/>
                <Border BorderBrush="DodgerBlue" BorderThickness="1" CornerRadius="3"
                        Background="#301e90ff" Margin="0" MouseEnter="ChunkMouseEnter">
                    <Border.Style>
                        <Style>
                            <Setter Property="Border.Opacity" Value="0"></Setter>
                            <Style.Triggers>
                                <Trigger Property="Border.IsMouseOver" Value="True">
                                    <Setter Property="Border.Opacity" Value="1"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>

            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="HexRow">
            <ItemsControl ItemsSource="{Binding}"
                          ItemTemplate="{StaticResource HexChunk}"
                          HorizontalAlignment="Stretch">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Rows="1"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </DataTemplate>
        <DataTemplate x:Key="BlackListedOpcode">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Click="RemoveBlacklistedOpcode" Width="20" BorderThickness="0" Padding="0,-2,0,0">x</Button>
                <TextBlock Text="{Binding}" Grid.Column="1" VerticalAlignment="Center" Margin="3,0"></TextBlock>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="WhiteListedOpcode">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding}" Grid.Column="1" Margin="3,0"></TextBlock>
                <Button Grid.Column="0" Click="RemoveWhitelistedOpcode" Width="20" Padding="0,-2,0,0" BorderThickness="0">x</Button>
            </Grid>
        </DataTemplate>
        <DropShadowEffect x:Key="CardShadow" ShadowDepth="1" BlurRadius="5" Opacity=".3"></DropShadowEffect>
        <Style x:Key="CardBorder" TargetType="Border">
            <Setter Property="Background" Value="White"></Setter>
            <Setter Property="Effect" Value="{StaticResource CardShadow}"></Setter>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Background" Value="#1000"></Setter>
            <Setter Property="CaretBrush" Value="#000"></Setter>
        </Style>
    </Window.Resources>
    <Grid Margin="10" UseLayoutRounding="True">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="350"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="300"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock>Settings</TextBlock>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Border  Style="{StaticResource CardBorder}" Grid.Row="0" Margin="0,0,0,5" Padding="3">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <!--Card title-->
                            <Border BorderThickness="1" Background="Crimson" BorderBrush="#fff" Margin="-3,-3,-3,0" Opacity=".7">
                                <TextBlock Margin="3,2,0,2" Padding="3,0,3,1" Foreground="White">Discard opcodes (dec)</TextBlock>
                            </Border>
                            <!--Card content-->
                            <StackPanel Grid.Row="1" Margin="0,3,0,0">
                                <ScrollViewer VerticalAlignment="Stretch" Height="80" Margin="0,0,0,3">
                                    <ItemsControl ItemsSource="{Binding BlackListedOpcodes}"
                                                  ItemTemplate="{StaticResource BlackListedOpcode}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel></StackPanel>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </ScrollViewer>
                                <Grid >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox HorizontalAlignment="Stretch" Name="OpcodeToBlacklist"></TextBox>
                                    <Button Click="AddBlackListedOpcode" Width="20" Grid.Column="1" BorderThickness="0" Padding="0,-2,0,0">+</Button>
                                </Grid>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <Border  Style="{StaticResource CardBorder}"  Grid.Row="1" Padding="3" Margin="0,5">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <!--Card title-->
                            <Border BorderThickness="1" Background="MediumSeaGreen" BorderBrush="#fff" Margin="-3,-3,-3,0" Opacity=".8">
                                <TextBlock Margin="3,2,0,2" Padding="3,0,3,1" Foreground="White">Show only opcodes (dec)</TextBlock>
                            </Border>
                            <!--Card content-->
                            <StackPanel Grid.Row="1" Margin="0,3,0,0">
                                <ScrollViewer VerticalAlignment="Stretch" Height="80" Margin="0,0,0,3">
                                    <ItemsControl ItemsSource="{Binding WhiteListedOpcodes}"
                                                  ItemTemplate="{StaticResource WhiteListedOpcode}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel></StackPanel>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </ScrollViewer>
                                <Grid >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox HorizontalAlignment="Stretch" Name="OpcodeToWhitelist"></TextBox>
                                    <Button Width="20" Grid.Column="1" Click="AddWhiteListedOpcode" BorderThickness="0" Padding="0,-2,0,0" >+</Button>
                                </Grid>
                            </StackPanel>
                        </Grid>
                    </Border>
                </Grid>
                <Border  Style="{StaticResource CardBorder}" Margin="10,0,0,5" Padding="3" HorizontalAlignment="Stretch" VerticalAlignment="Top" Grid.Column="1">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <!--Card title-->
                        <Border BorderThickness="1" Background="DodgerBlue" BorderBrush="#fff" Margin="-3,-3,-3,3" Opacity=".7">
                            <TextBlock Margin="3,2,0,2" Padding="3,0,3,1" Foreground="White">Filters</TextBlock>
                        </Border>
                        <!--Card content-->
                        <StackPanel Grid.Row="1" Margin="3,0,0,3">
                            <CheckBox Content="Server" Name="ServerCb" IsChecked="True"></CheckBox>
                            <CheckBox Content="Client" Name="ClientCb" IsChecked="True"></CheckBox>
                            <CheckBox Content="Spam filter" ToolTip="Discards a packet if the previous one has the same opcode." Name="SpamCb" IsChecked="False"></CheckBox>
                            <Button Content="Clear all" Width="Auto" HorizontalAlignment="Left" Click="ClearAll" Margin="1,4,0,2"></Button>
                            <Button Content="Dump known to file" Width="Auto" HorizontalAlignment="Left" Click="Dump" Margin="1,2,0,0"></Button>
                            <Button Content="Load Log" Width="Auto" HorizontalAlignment="Left" Click="Load" Margin="1,2,0,0"></Button>
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>
            <!--Known list-->
            <Grid Grid.Row="2" Grid.ColumnSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock>Known opcodes</TextBlock>
                <ScrollViewer Grid.Row="1" x:Name="KnownSw">
                    <ItemsControl ItemsSource="{Binding Known}" ItemTemplate="{StaticResource opcdt}"  BorderThickness="1" BorderBrush="#2000" >
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Background="White"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ScrollViewer>
            </Grid>
        </Grid>
        <!--All list-->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock >
                <Run Text="All packets  - "></Run>
                <Run Text="{Binding All.Count, Mode=OneWay}"></Run>
            </TextBlock>
            <ScrollViewer Grid.Row="1" x:Name="AllSw">
                <ItemsControl ItemsSource="{Binding All}" ItemTemplate="{StaticResource msg}"  
                              BorderThickness="1" BorderBrush="#2000" 
                              x:Name="AllItemsControl">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" Background="White"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </ScrollViewer>
        </Grid>
        <Grid Grid.Column="1" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.ColumnSpan="2">Text view</TextBlock>
            <ScrollViewer Width="270" Grid.Row="1" MinWidth="100"
                          ScrollChanged="HexSwChanged" x:Name="HexSw" VerticalScrollBarVisibility="Hidden">
                <ItemsControl ItemsSource="{Binding PacketDetails.RowsHex}"
                          ItemTemplate="{StaticResource HexRow}"
                          
                          BorderThickness="1" BorderBrush="#ccc">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Background="White"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </ScrollViewer>
            <ScrollViewer Width="160" MinWidth="50" Grid.Row="1" Grid.Column="1" x:Name="TextSw" ScrollChanged="HexSwChanged">
                <ItemsControl ItemsSource="{Binding PacketDetails.RowsText}"
                              ItemTemplate="{StaticResource HexRow}"
                              HorizontalAlignment="Stretch"
                              Margin="-1,0,0,0"
                              BorderThickness="1" BorderBrush="#ccc">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Background="White"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </ScrollViewer>
        </Grid>
    </Grid>

</Window>



